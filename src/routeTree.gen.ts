/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

import { Route as rootRouteImport } from './routes/__root'
import { Route as DashboardRouteImport } from './routes/_dashboard'
import { Route as IndexRouteImport } from './routes/index'
import { Route as AuthSignUpRouteImport } from './routes/auth.sign-up'
import { Route as AuthSignInRouteImport } from './routes/auth.sign-in'
import { Route as DashboardOrganizationsRouteImport } from './routes/_dashboard/organizations'
import { Route as DashboardExpensesRouteImport } from './routes/_dashboard/expenses'
import { Route as DashboardDashboardRouteImport } from './routes/_dashboard/dashboard'
import { Route as DashboardBillsRouteImport } from './routes/_dashboard/bills'
import { Route as DashboardAccountRouteImport } from './routes/_dashboard/account'
import { Route as DashboardBillsAddRouteImport } from './routes/_dashboard/bills.add'

const DashboardRoute = DashboardRouteImport.update({
  id: '/_dashboard',
  getParentRoute: () => rootRouteImport,
} as any)
const IndexRoute = IndexRouteImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => rootRouteImport,
} as any)
const AuthSignUpRoute = AuthSignUpRouteImport.update({
  id: '/auth/sign-up',
  path: '/auth/sign-up',
  getParentRoute: () => rootRouteImport,
} as any)
const AuthSignInRoute = AuthSignInRouteImport.update({
  id: '/auth/sign-in',
  path: '/auth/sign-in',
  getParentRoute: () => rootRouteImport,
} as any)
const DashboardOrganizationsRoute = DashboardOrganizationsRouteImport.update({
  id: '/organizations',
  path: '/organizations',
  getParentRoute: () => DashboardRoute,
} as any)
const DashboardExpensesRoute = DashboardExpensesRouteImport.update({
  id: '/expenses',
  path: '/expenses',
  getParentRoute: () => DashboardRoute,
} as any)
const DashboardDashboardRoute = DashboardDashboardRouteImport.update({
  id: '/dashboard',
  path: '/dashboard',
  getParentRoute: () => DashboardRoute,
} as any)
const DashboardBillsRoute = DashboardBillsRouteImport.update({
  id: '/bills',
  path: '/bills',
  getParentRoute: () => DashboardRoute,
} as any)
const DashboardAccountRoute = DashboardAccountRouteImport.update({
  id: '/account',
  path: '/account',
  getParentRoute: () => DashboardRoute,
} as any)
const DashboardBillsAddRoute = DashboardBillsAddRouteImport.update({
  id: '/add',
  path: '/add',
  getParentRoute: () => DashboardBillsRoute,
} as any)

export interface FileRoutesByFullPath {
  '/': typeof IndexRoute
  '/account': typeof DashboardAccountRoute
  '/bills': typeof DashboardBillsRouteWithChildren
  '/dashboard': typeof DashboardDashboardRoute
  '/expenses': typeof DashboardExpensesRoute
  '/organizations': typeof DashboardOrganizationsRoute
  '/auth/sign-in': typeof AuthSignInRoute
  '/auth/sign-up': typeof AuthSignUpRoute
  '/bills/add': typeof DashboardBillsAddRoute
}
export interface FileRoutesByTo {
  '/': typeof IndexRoute
  '/account': typeof DashboardAccountRoute
  '/bills': typeof DashboardBillsRouteWithChildren
  '/dashboard': typeof DashboardDashboardRoute
  '/expenses': typeof DashboardExpensesRoute
  '/organizations': typeof DashboardOrganizationsRoute
  '/auth/sign-in': typeof AuthSignInRoute
  '/auth/sign-up': typeof AuthSignUpRoute
  '/bills/add': typeof DashboardBillsAddRoute
}
export interface FileRoutesById {
  __root__: typeof rootRouteImport
  '/': typeof IndexRoute
  '/_dashboard': typeof DashboardRouteWithChildren
  '/_dashboard/account': typeof DashboardAccountRoute
  '/_dashboard/bills': typeof DashboardBillsRouteWithChildren
  '/_dashboard/dashboard': typeof DashboardDashboardRoute
  '/_dashboard/expenses': typeof DashboardExpensesRoute
  '/_dashboard/organizations': typeof DashboardOrganizationsRoute
  '/auth/sign-in': typeof AuthSignInRoute
  '/auth/sign-up': typeof AuthSignUpRoute
  '/_dashboard/bills/add': typeof DashboardBillsAddRoute
}
export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths:
    | '/'
    | '/account'
    | '/bills'
    | '/dashboard'
    | '/expenses'
    | '/organizations'
    | '/auth/sign-in'
    | '/auth/sign-up'
    | '/bills/add'
  fileRoutesByTo: FileRoutesByTo
  to:
    | '/'
    | '/account'
    | '/bills'
    | '/dashboard'
    | '/expenses'
    | '/organizations'
    | '/auth/sign-in'
    | '/auth/sign-up'
    | '/bills/add'
  id:
    | '__root__'
    | '/'
    | '/_dashboard'
    | '/_dashboard/account'
    | '/_dashboard/bills'
    | '/_dashboard/dashboard'
    | '/_dashboard/expenses'
    | '/_dashboard/organizations'
    | '/auth/sign-in'
    | '/auth/sign-up'
    | '/_dashboard/bills/add'
  fileRoutesById: FileRoutesById
}
export interface RootRouteChildren {
  IndexRoute: typeof IndexRoute
  DashboardRoute: typeof DashboardRouteWithChildren
  AuthSignInRoute: typeof AuthSignInRoute
  AuthSignUpRoute: typeof AuthSignUpRoute
}

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/_dashboard': {
      id: '/_dashboard'
      path: ''
      fullPath: ''
      preLoaderRoute: typeof DashboardRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/': {
      id: '/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof IndexRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/auth/sign-up': {
      id: '/auth/sign-up'
      path: '/auth/sign-up'
      fullPath: '/auth/sign-up'
      preLoaderRoute: typeof AuthSignUpRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/auth/sign-in': {
      id: '/auth/sign-in'
      path: '/auth/sign-in'
      fullPath: '/auth/sign-in'
      preLoaderRoute: typeof AuthSignInRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/_dashboard/organizations': {
      id: '/_dashboard/organizations'
      path: '/organizations'
      fullPath: '/organizations'
      preLoaderRoute: typeof DashboardOrganizationsRouteImport
      parentRoute: typeof DashboardRoute
    }
    '/_dashboard/expenses': {
      id: '/_dashboard/expenses'
      path: '/expenses'
      fullPath: '/expenses'
      preLoaderRoute: typeof DashboardExpensesRouteImport
      parentRoute: typeof DashboardRoute
    }
    '/_dashboard/dashboard': {
      id: '/_dashboard/dashboard'
      path: '/dashboard'
      fullPath: '/dashboard'
      preLoaderRoute: typeof DashboardDashboardRouteImport
      parentRoute: typeof DashboardRoute
    }
    '/_dashboard/bills': {
      id: '/_dashboard/bills'
      path: '/bills'
      fullPath: '/bills'
      preLoaderRoute: typeof DashboardBillsRouteImport
      parentRoute: typeof DashboardRoute
    }
    '/_dashboard/account': {
      id: '/_dashboard/account'
      path: '/account'
      fullPath: '/account'
      preLoaderRoute: typeof DashboardAccountRouteImport
      parentRoute: typeof DashboardRoute
    }
    '/_dashboard/bills/add': {
      id: '/_dashboard/bills/add'
      path: '/add'
      fullPath: '/bills/add'
      preLoaderRoute: typeof DashboardBillsAddRouteImport
      parentRoute: typeof DashboardBillsRoute
    }
  }
}

interface DashboardBillsRouteChildren {
  DashboardBillsAddRoute: typeof DashboardBillsAddRoute
}

const DashboardBillsRouteChildren: DashboardBillsRouteChildren = {
  DashboardBillsAddRoute: DashboardBillsAddRoute,
}

const DashboardBillsRouteWithChildren = DashboardBillsRoute._addFileChildren(
  DashboardBillsRouteChildren,
)

interface DashboardRouteChildren {
  DashboardAccountRoute: typeof DashboardAccountRoute
  DashboardBillsRoute: typeof DashboardBillsRouteWithChildren
  DashboardDashboardRoute: typeof DashboardDashboardRoute
  DashboardExpensesRoute: typeof DashboardExpensesRoute
  DashboardOrganizationsRoute: typeof DashboardOrganizationsRoute
}

const DashboardRouteChildren: DashboardRouteChildren = {
  DashboardAccountRoute: DashboardAccountRoute,
  DashboardBillsRoute: DashboardBillsRouteWithChildren,
  DashboardDashboardRoute: DashboardDashboardRoute,
  DashboardExpensesRoute: DashboardExpensesRoute,
  DashboardOrganizationsRoute: DashboardOrganizationsRoute,
}

const DashboardRouteWithChildren = DashboardRoute._addFileChildren(
  DashboardRouteChildren,
)

const rootRouteChildren: RootRouteChildren = {
  IndexRoute: IndexRoute,
  DashboardRoute: DashboardRouteWithChildren,
  AuthSignInRoute: AuthSignInRoute,
  AuthSignUpRoute: AuthSignUpRoute,
}
export const routeTree = rootRouteImport
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()
